# bot.py (‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£)

import asyncio
from pyrogram import Client, filters
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from config import *
from script import Script

# ‡¶¨‡¶ü ‡¶ï‡ßç‡¶≤‡¶æ‡ßü‡ßá‡¶®‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø
app = Client(
    SESSION,
    api_id=API_ID,
    api_hash=API_HASH,
    bot_token=BOT_TOKEN
)

# --- ‡¶Ö‡¶ü‡ßã-‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡¶°‡¶æ‡¶â‡¶® ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ---
async def auto_delete_message_with_countdown(message: Message, time: int):
    """Deletes a message after a countdown, editing it periodically."""
    try:
        # ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ
        original_text = message.text or message.caption
        if not original_text:
            original_text = ""

        # ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡¶°‡¶æ‡¶â‡¶® ‡¶≤‡ßÅ‡¶™
        for i in range(time, 0, -10): # ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡ßß‡ß¶ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°‡ßá ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶π‡¶¨‡ßá
            remaining_time = max(i - 10, 0)
            countdown_text = f"\n\n**‚ö†Ô∏è This message will be deleted in `{remaining_time}` seconds.**"
            try:
                await message.edit_text(original_text + countdown_text)
            except Exception:
                pass # ‡¶Ø‡¶¶‡¶ø ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶è‡¶°‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶®‡¶æ ‡¶Ø‡¶æ‡ßü
            await asyncio.sleep(10)
        
        # ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ
        await message.delete()
    except Exception as e:
        print(f"Error in auto-delete: {e}")

# --- ‡¶∏‡ßç‡¶ü‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞ ---
@app.on_message(filters.command("start") & filters.private)
async def start_command(client: Client, message: Message):
    user_first_name = message.from_user.first_name
    
    # ‡¶á‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶¨‡¶æ‡¶ü‡¶®
    buttons = [
        [InlineKeyboardButton("‚ûï Add Me To Your Group ‚ûï", url=f"http://t.me/Surya_X_Provider_Subot?startgroup=true")],
        [
            InlineKeyboardButton("üí¨ Help", callback_data="help"),
            InlineKeyboardButton("ü§ñ About", callback_data="about")
        ],
        [InlineKeyboardButton("‚ù§Ô∏è Owner", url="https://t.me/Mr_SuryaBhaskar")]
    ]
    
    await message.reply_text(
        text=Script.START_TEXT.format(user_first_name=user_first_name),
        reply_markup=InlineKeyboardMarkup(buttons),
        disable_web_page_preview=True
    )

# --- ‡¶´‡¶ø‡¶≤‡ßç‡¶ü‡¶æ‡¶∞ ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞ (‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶ì ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶¨‡ßá) ---
@app.on_message(filters.text & (filters.group | filters.channel))
async def auto_filter_handler(client: Client, message: Message):
    # ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Æ‡ßÅ‡¶≠‡¶ø ‡¶ñ‡ßã‡¶Å‡¶ú‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡¶∞ ‡¶≤‡¶ú‡¶ø‡¶ï ‡¶•‡¶æ‡¶ï‡¶¨‡ßá
    # ‡¶Ø‡ßá‡¶Æ‡¶® ‡¶°‡ßá‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶•‡ßá‡¶ï‡ßá ‡¶´‡¶æ‡¶á‡¶≤ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ
    
    # --- ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: ‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡¶∞ ‡¶™‡¶∞ ‡¶Ö‡¶ü‡ßã-‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ ---
    # sent_message = await message.reply_text("Here is your file!") # ‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡¶∞ ‡¶™‡¶∞
    
    # if AUTO_DELETE:
    #     asyncio.create_task(auto_delete_message_with_countdown(sent_message, DELETE_TIME))
    pass


# --- ‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡¶∞ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£ (‡¶è‡¶á ‡¶Ö‡¶Ç‡¶∂‡¶ü‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶≤‡¶ú‡¶ø‡¶ï ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®) ---
async def send_file_to_user(user_id, file_info):
    # ‡¶∂‡¶∞‡ßç‡¶ü‡¶®‡¶æ‡¶∞ ‡¶õ‡¶æ‡ßú‡¶æ‡¶á ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶¨‡ßá
    file_caption = Script.FILE_CAPTION.format(
        title=file_info.get('title', 'N/A'),
        quality=file_info.get('quality', 'N/A'),
        audio=file_info.get('audio', 'N/A'),
        language=file_info.get('language', 'N/A'),
        size=file_info.get('size', 'N/A')
    )
    
    sent_message = await app.send_document(
        chat_id=user_id,
        document=file_info['file_id'],
        caption=file_caption
    )
    
    # ‡¶Ö‡¶ü‡ßã-‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ
    if AUTO_DELETE:
        asyncio.create_task(auto_delete_message_with_countdown(sent_message, DELETE_TIME))
        

# ‡¶¨‡¶ü ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®‡ßã
if __name__ == "__main__":
    print("Bot is starting...")
    app.run()
